#!/bin/sh
set -e

echo "=== Avatar Generator Backend Startup ==="

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º DATABASE_PROVIDER –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
CONFIG_FILE="./settings.yaml"
if [ -f "$CONFIG_FILE" ]; then
  # –ß–∏—Ç–∞–µ–º driver –∏–∑ YAML –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  DATABASE_PROVIDER=$(grep -A 20 "database:" "$CONFIG_FILE" | grep "driver:" | awk '{print $2}' | tr -d "'\"")
  echo "üìã Database provider from config: $DATABASE_PROVIDER"
else
  # Fallback: –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
  if [ -z "$DATABASE_PROVIDER" ]; then
    case "$DATABASE_URL" in
      postgresql://*|postgres://*)
        DATABASE_PROVIDER="postgresql"
        ;;
      file:*)
        DATABASE_PROVIDER="sqlite"
        ;;
      *)
        echo "‚ö†Ô∏è  Warning: Cannot determine database provider from DATABASE_URL: $DATABASE_URL"
        echo "Defaulting to sqlite"
        DATABASE_PROVIDER="sqlite"
        ;;
    esac
  fi
fi

echo "üì¶ Database Provider: $DATABASE_PROVIDER"
echo "üîó Database URL: ${DATABASE_URL:0:30}..." # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–æ URL (–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å)

# –í—ã–±–∏—Ä–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π schema.prisma –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
if [ "$DATABASE_PROVIDER" = "postgresql" ]; then
  echo "üìÑ Using PostgreSQL schema..."
  cp /app/prisma/schema.postgresql.prisma /app/prisma/schema.prisma
elif [ "$DATABASE_PROVIDER" = "sqlite" ]; then
  echo "üìÑ Using SQLite schema..."
  cp /app/prisma/schema.sqlite.prisma /app/prisma/schema.prisma
else
  echo "‚ùå Error: Unsupported DATABASE_PROVIDER: $DATABASE_PROVIDER"
  echo "Supported values: sqlite, postgresql"
  exit 1
fi

# –£–¥–∞–ª—è–µ–º –≤–µ—Å—å —Å—Ç–∞—Ä—ã–π Prisma Client (–∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è provider)
echo "üßπ Cleaning old Prisma Client cache..."
rm -rf /app/node_modules/.prisma/client
rm -rf /app/node_modules/@prisma/client/.prisma

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Prisma Client —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º provider
echo "üîß Generating Prisma Client for $DATABASE_PROVIDER..."
npx prisma generate --schema=/app/prisma/schema.prisma

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–æ–≤—ã–π client —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω
if [ ! -f "/app/node_modules/.prisma/client/index.js" ]; then
  echo "‚ùå Error: Prisma Client generation failed"
  exit 1
fi

echo "‚úÖ Prisma Client generated successfully"

# –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å—Ö–µ–º—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
# –ò—Å–ø–æ–ª—å–∑—É–µ–º db push –≤–º–µ—Å—Ç–æ migrate deploy –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤,
# —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –æ–±–æ–∏–º–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞–º–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
echo "üóÑÔ∏è  Synchronizing database schema..."
npx prisma db push --accept-data-loss --skip-generate

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
echo "üöÄ Starting avatar generator application..."
exec node dist/main.js
