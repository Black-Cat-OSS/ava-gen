name: E2E Tests

on:
  # –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫
  workflow_dispatch:
    inputs:
      test_scope:
        description: '–û–±–ª–∞—Å—Ç—å E2E —Ç–µ—Å—Ç–æ–≤'
        required: false
        default: 'full'
        type: choice
        options:
          - full
          - health
          - api

  # –ó–∞–ø—É—Å–∫ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ E2E —Ç–µ—Å—Ç–æ–≤
  push:
    paths:
      - 'backend/test/**/*.e2e-spec.ts'
      - 'frontend/src/**/*'
      - 'gateway/configs/**/*'
      - 'backend/configs/settings.test.e2e.yaml'

  # –ó–∞–ø—É—Å–∫ –ø—Ä–∏ PR –≤ main
  pull_request:
    branches:
      - main
    paths:
      - 'backend/test/**/*.e2e-spec.ts'
      - 'frontend/src/**/*'
      - 'gateway/configs/**/*'

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '10'

jobs:
  e2e-tests:
    name: E2E Tests (${{ github.event.inputs.test_scope || 'full' }})
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build test images with cache
        run: |
          echo "üèóÔ∏è –°–±–æ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –æ–±—Ä–∞–∑–æ–≤..."
          
          # Backend test image
          docker build -f backend/docker/Dockerfile --target builder -t avatar-gen-test-backend:builder .
          
          # Frontend test image
          docker build -f frontend/docker/Dockerfile -t avatar-gen-test-frontend:latest .
          
          # Gateway test image
          docker build -f gateway/Dockerfile -t avatar-gen-test-gateway:latest ./gateway
          
          echo "‚úÖ –û–±—Ä–∞–∑—ã —Å–æ–±—Ä–∞–Ω—ã"

      - name: Run E2E tests with Docker Compose
        run: |
          TEST_SCOPE="${{ github.event.inputs.test_scope || 'full' }}"
          
          echo "üé≠ –ó–∞–ø—É—Å–∫ E2E —Ç–µ—Å—Ç–æ–≤ —Å –æ–±–ª–∞—Å—Ç—å—é: $TEST_SCOPE"
          
          # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è E2E —Ç–µ—Å—Ç–æ–≤
          export TEST_DB_DRIVER=postgresql
          export TEST_DB_HOST=localhost
          export TEST_DB_PORT=5433
          export TEST_DB_NAME=avatar_gen_test
          export TEST_DB_USER=test_user
          export TEST_DB_PASSWORD=test_password
          
          export TEST_STORAGE_TYPE=local
          
          if [ "$TEST_SCOPE" = "health" ]; then
            # –¢–æ–ª—å–∫–æ health check —Ç–µ—Å—Ç—ã
            docker compose -f docker/docker-compose.test-extended.yaml --profile e2e-health up --build --abort-on-container-exit e2e-health-runner
          else
            # –ü–æ–ª–Ω—ã–µ E2E —Ç–µ—Å—Ç—ã
            docker compose -f docker/docker-compose.test-extended.yaml --profile e2e-only up --build --abort-on-container-exit e2e-test-runner
          fi
          
          echo "‚úÖ E2E —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã"

      - name: Collect test results
        if: always()
        run: |
          echo "üìä –°–±–æ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ E2E —Ç–µ—Å—Ç–æ–≤..."
          
          TEST_SCOPE="${{ github.event.inputs.test_scope || 'full' }}"
          
          if [ "$TEST_SCOPE" = "health" ]; then
            docker compose -f docker/docker-compose.test-extended.yaml logs e2e-health-runner > e2e-test-results.log
            TEST_RUNNER="e2e-health-runner"
          else
            docker compose -f docker/docker-compose.test-extended.yaml logs e2e-test-runner > e2e-test-results.log
            TEST_RUNNER="e2e-test-runner"
          fi
          
          echo "## üé≠ E2E Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Configuration Used" >> $GITHUB_STEP_SUMMARY
          echo "- Test Scope: $TEST_SCOPE" >> $GITHUB_STEP_SUMMARY
          echo "- Database: PostgreSQL" >> $GITHUB_STEP_SUMMARY
          echo "- Storage: Local filesystem" >> $GITHUB_STEP_SUMMARY
          echo "- Full Stack: Backend + Frontend + Gateway" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -f e2e-test-results.log ]; then
            echo "### Test Output" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            tail -100 e2e-test-results.log >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results-${{ github.event.inputs.test_scope || 'full' }}
          path: e2e-test-results.log
          retention-days: 7

      - name: Upload coverage
        if: always()
        uses: codecov/codecov-action@v4
        with:
          files: ./backend/coverage/lcov.info
          flags: e2e-${{ github.event.inputs.test_scope || 'full' }}
          name: e2e-coverage-${{ github.event.inputs.test_scope || 'full' }}

      - name: Cleanup
        if: always()
        run: |
          echo "üßπ –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤..."
          docker compose -f docker/docker-compose.test-extended.yaml --profile e2e-only down --remove-orphans
          docker compose -f docker/docker-compose.test-extended.yaml --profile e2e-health down --remove-orphans
