name: Integration Tests

on:
  # –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫
  workflow_dispatch:
    inputs:
      database_type:
        description: '–¢–∏–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö'
        required: false
        default: 'postgresql'
        type: choice
        options:
          - postgresql
          - sqlite
      storage_type:
        description: '–¢–∏–ø —Ö—Ä–∞–Ω–∏–ª–∏—â–∞'
        required: false
        default: 'local'
        type: choice
        options:
          - local
          - s3

  # –ó–∞–ø—É—Å–∫ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ integration —Ç–µ—Å—Ç–æ–≤
  push:
    paths:
      - 'backend/test/**/*.integration-spec.ts'
      - 'backend/test/**/*.e2e-spec.ts'
      - 'backend/configs/settings.test.*.yaml'
      - 'backend/vitest.config.integration.ts'

  # –ó–∞–ø—É—Å–∫ –ø—Ä–∏ PR –≤ develop
  pull_request:
    branches:
      - develop
    paths:
      - 'backend/test/**/*.integration-spec.ts'
      - 'backend/test/**/*.e2e-spec.ts'
      - 'backend/configs/settings.test.*.yaml'

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '10'

jobs:
  integration-tests:
    name: Integration Tests (${{ github.event.inputs.database_type || 'postgresql' }} + ${{ github.event.inputs.storage_type || 'local' }})
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run integration tests with Docker Compose
        run: |
          # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è —Ç–µ—Å—Ç–æ–≤
          DB_TYPE="${{ github.event.inputs.database_type || 'postgresql' }}"
          STORAGE_TYPE="${{ github.event.inputs.storage_type || 'local' }}"

          echo "üîó –ó–∞–ø—É—Å–∫ integration —Ç–µ—Å—Ç–æ–≤ —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π:"
          echo "  - Database: $DB_TYPE"
          echo "  - Storage: $STORAGE_TYPE"

          # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
          export TEST_DB_DRIVER=$DB_TYPE
          export TEST_STORAGE_TYPE=$STORAGE_TYPE

          if [ "$STORAGE_TYPE" = "s3" ]; then
            export TEST_S3_ENDPOINT=http://localhost:9000
            export TEST_S3_ACCESS_KEY=test-access-key
            export TEST_S3_SECRET_KEY=test-secret-key
            export TEST_S3_BUCKET=avatar-gen-test
            export TEST_S3_REGION=us-east-1
          fi

          if [ "$DB_TYPE" = "postgresql" ]; then
            export TEST_DB_HOST=localhost
            export TEST_DB_PORT=5433
            export TEST_DB_NAME=avatar_gen_test
            export TEST_DB_USER=test_user
            export TEST_DB_PASSWORD=test_password
          fi

          # –ó–∞–ø—É—Å–∫–∞–µ–º integration —Ç–µ—Å—Ç—ã
          docker compose -f docker/docker-compose.test-extended.yaml --profile integration-only up --build --abort-on-container-exit avatar-backend-integration

          echo "‚úÖ Integration —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã"

      - name: Collect test results
        if: always()
        run: |
          echo "üìä –°–±–æ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ integration —Ç–µ—Å—Ç–æ–≤..."
          docker compose -f docker/docker-compose.test-extended.yaml logs avatar-backend-integration > integration-test-results.log

          echo "## üîó Integration Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Configuration Used" >> $GITHUB_STEP_SUMMARY
          echo "- Database: ${{ github.event.inputs.database_type || 'postgresql' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Storage: ${{ github.event.inputs.storage_type || 'local' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ -f integration-test-results.log ]; then
            echo "### Test Output" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            tail -50 integration-test-results.log >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: integration-test-results.log
          retention-days: 7

      - name: Upload coverage
        if: always()
        uses: codecov/codecov-action@v4
        with:
          files: ./backend/coverage/lcov.info
          flags: integration-${{ github.event.inputs.database_type || 'postgresql' }}-${{ github.event.inputs.storage_type || 'local' }}
          name: integration-coverage-${{ github.event.inputs.database_type || 'postgresql' }}-${{ github.event.inputs.storage_type || 'local' }}

      - name: Cleanup
        if: always()
        run: |
          echo "üßπ –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤..."
          docker compose -f docker/docker-compose.test-extended.yaml --profile integration-only down --remove-orphans
