name: Unit Tests

on:
  # –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫
  workflow_dispatch:
    inputs:
      config_type:
        description: '–¢–∏–ø –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–æ–≤'
        required: false
        default: 'unit'
        type: choice
        options:
          - unit
          - default

  # –ó–∞–ø—É—Å–∫ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ unit —Ç–µ—Å—Ç–æ–≤
  push:
    paths:
      - 'backend/src/**/*.spec.ts'
      - 'backend/src/**/*.test.ts'
      - 'backend/configs/settings.test.unit.yaml'
      - 'backend/vitest.config.ts'

  # –ó–∞–ø—É—Å–∫ –ø—Ä–∏ PR –≤ develop
  pull_request:
    branches:
      - develop
    paths:
      - 'backend/src/**/*.spec.ts'
      - 'backend/src/**/*.test.ts'
      - 'backend/configs/settings.test.unit.yaml'

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '10'

jobs:
  unit-tests:
    name: Unit Tests (${{ github.event.inputs.config_type || 'unit' }})
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run unit tests with Docker Compose
        run: |
          # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è —Ç–µ—Å—Ç–æ–≤
          if [ "${{ github.event.inputs.config_type || 'unit' }}" = "unit" ]; then
            CONFIG_FILE="settings.test.unit.yaml"
          else
            CONFIG_FILE="settings.test.yaml"
          fi

          echo "üß™ –ó–∞–ø—É—Å–∫ unit —Ç–µ—Å—Ç–æ–≤ —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π: $CONFIG_FILE"

          # –ó–∞–ø—É—Å–∫–∞–µ–º unit —Ç–µ—Å—Ç—ã —Å –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º –Ω—É–∂–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
          docker compose -f docker/docker-compose.test-extended.yaml --profile unit-only up --build --abort-on-container-exit avatar-backend-unit

          echo "‚úÖ Unit —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã"

      - name: Collect test results
        if: always()
        run: |
          echo "üìä –°–±–æ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ unit —Ç–µ—Å—Ç–æ–≤..."
          docker compose -f docker/docker-compose.test-extended.yaml logs avatar-backend-unit > unit-test-results.log

          echo "## üß™ Unit Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Configuration Used" >> $GITHUB_STEP_SUMMARY
          echo "- Config: ${{ github.event.inputs.config_type || 'unit' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Database: SQLite (in-memory)" >> $GITHUB_STEP_SUMMARY
          echo "- Storage: Local filesystem" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ -f unit-test-results.log ]; then
            echo "### Test Output" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            tail -50 unit-test-results.log >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: unit-test-results.log
          retention-days: 7

      - name: Cleanup
        if: always()
        run: |
          echo "üßπ –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤..."
          docker compose -f docker/docker-compose.test-extended.yaml --profile unit-only down --remove-orphans
