#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞—â–∏—Ç—ã –≤–µ—Ç–æ–∫ –≤ GitHub
# –¢—Ä–µ–±—É–µ—Ç GitHub CLI (gh) –∏ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
# –†–∞–±–æ—Ç–∞–µ—Ç –≤ GitBash, Linux –∏ macOS

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üõ°Ô∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞—â–∏—Ç—ã –≤–µ—Ç–æ–∫ GitHub${NC}"
echo "=================================="
echo -e "${BLUE}üí° –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å: GitBash, Linux, macOS${NC}"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ GitHub CLI
if ! command -v gh &> /dev/null; then
    echo -e "${RED}‚ùå GitHub CLI –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: https://cli.github.com/${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
if ! gh auth status &> /dev/null; then
    echo -e "${RED}‚ùå –ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –≤ GitHub CLI. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: gh auth login${NC}"
    exit 1
fi

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
REPO=$(gh repo view --json nameWithOwner -q .nameWithOwner)
echo -e "${GREEN}üì¶ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: ${REPO}${NC}"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞—â–∏—Ç—ã –≤–µ—Ç–∫–∏
setup_branch_protection() {
    local branch=$1
    local checks=$2
    local description=$3
    
    echo -e "${YELLOW}üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞—â–∏—Ç—ã –¥–ª—è –≤–µ—Ç–∫–∏: ${branch}${NC}"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –∑–∞—â–∏—Ç—ã
    gh api repos/:owner/:repo/branches/${branch}/protection \
        --method PUT \
        --field required_status_checks='{"strict":true,"contexts":['${checks}']}' \
        --field enforce_admins=true \
        --field required_pull_request_reviews='{"required_approving_review_count":1,"dismiss_stale_reviews":true,"require_code_owner_reviews":true}' \
        --field restrictions=null \
        --field allow_force_pushes=false \
        --field allow_deletions=false \
        --field required_conversation_resolution=true
    
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ –ó–∞—â–∏—Ç–∞ –¥–ª—è –≤–µ—Ç–∫–∏ ${branch} –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞${NC}"
        echo "   ${description}"
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞—â–∏—Ç—ã –¥–ª—è –≤–µ—Ç–∫–∏ ${branch}${NC}"
        return 1
    fi
}

# –°—Ç–∞—Ç—É—Å-—á–µ–∫–∏ –¥–ª—è develop (–±—ã—Å—Ç—Ä—ã–µ —Ç–µ—Å—Ç—ã)
DEVELOP_CHECKS='"lint-backend","lint-frontend","test-backend (SQLite + Local)","test-backend (SQLite + S3)","build-frontend","docker-build-test"'

# –°—Ç–∞—Ç—É—Å-—á–µ–∫–∏ –¥–ª—è main (–ø–æ–ª–Ω—ã–µ —Ç–µ—Å—Ç—ã)
MAIN_CHECKS='"lint-backend","lint-frontend","test-backend (SQLite + Local)","test-backend (SQLite + S3)","test-backend (PostgreSQL + Local)","test-backend (PostgreSQL + S3)","build-frontend","docker-build-test"'

echo ""
echo -e "${BLUE}üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞—â–∏—Ç—ã –≤–µ—Ç–æ–∫...${NC}"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ develop –≤–µ—Ç–∫–∏
setup_branch_protection "develop" "${DEVELOP_CHECKS}" "–ë—ã—Å—Ç—Ä—ã–µ —Ç–µ—Å—Ç—ã (SQLite + Local/S3)"

echo ""

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ main –≤–µ—Ç–∫–∏  
setup_branch_protection "main" "${MAIN_CHECKS}" "–ü–æ–ª–Ω—ã–µ —Ç–µ—Å—Ç—ã (SQLite + PostgreSQL √ó Local/S3)"

echo ""
echo -e "${GREEN}üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞—â–∏—Ç—ã –≤–µ—Ç–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
echo ""
echo -e "${BLUE}üìñ –ß—Ç–æ –¥–∞–ª—å—à–µ:${NC}"
echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ GitHub: Settings ‚Üí Branches"
echo "2. –°–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π PR –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏"
echo "3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ merge –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –¥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤"
echo ""
echo -e "${YELLOW}‚ö†Ô∏è  –í–∞–∂–Ω–æ:${NC}"
echo "- –í—Å–µ PR —Ç–µ–ø–µ—Ä—å —Ç—Ä–µ–±—É—é—Ç approval –æ—Ç code owners"
echo "- Merge –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –¥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"
echo "- Force push –∏ —É–¥–∞–ª–µ–Ω–∏–µ –≤–µ—Ç–æ–∫ –∑–∞–ø—Ä–µ—â–µ–Ω—ã"
echo "- –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .github/CODEOWNERS –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è reviewers"
echo ""
echo -e "${BLUE}üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:${NC}"
echo "- [Branch Protection Setup](docs/deployment/BRANCH_PROTECTION_SETUP.md)"
echo "- [GitFlow Strategy](docs/deployment/GITFLOW_STRATEGY.md)"
